
Наиболее часто используемые локаторы в Selenium webdriver:

1 Локатор по ID элемента:
element = driver.find_element_by_id("element_id")

2 Локатор по имени элемента:
element = driver.find_element_by_name("element_name")

3 Локатор по классу элемента:
element = driver.find_element_by_class_name("element_class")

4 Локатор по ссылке (тегу <a> и атрибуту href):
element = driver.find_element_by_link_text("link_text")

5 Локатор по частичному совпадению текста ссылки:
element = driver.find_element_by_partial_link_text("partial_link_text")

6 Локатор по тегу элемента:
element = driver.find_element_by_tag_name("tag_name")

7 Локатор по селектору CSS:
element = driver.find_element_by_css_selector("css_selector")

8 Локатор по пути XPath:
element = driver.find_element_by_xpath("xpath_expression")

9 Локатор по атрибуту элемента:
element = driver.find_element_by_xpath("//tag_name[@attribute='value']")

10 Локатор по тексту элемента:
element = driver.find_element_by_xpath("//*[text()='desired_text']")

11 Локатор по частичному совпадению атрибута элемента:
element = driver.find_element_by_xpath("//tag_name[contains(@attribute, 'partial_value')]")

12 Локатор по родительскому элементу и его дочернему элементу:
element = driver.find_element_by_xpath("//parent_tag[child_tag='desired_text']")

13 Локатор по последовательности классов элемента:
element = driver.find_element_by_css_selector(".class1.class2.class3")

14 Локатор по отношению к другому элементу (например, следующий соседний элемент):
element = driver.find_element_by_xpath("//preceding-sibling::tag_name")

15 Локатор по комбинации условий:
element = driver.find_element_by_xpath("//tag_name[@attribute='value' and contains(text(), 'desired_text')]")

16 Локатор по индексу элемента (например, первый элемент):
element = driver.find_elements_by_tag_name("tag_name")[0]


Варианты для поиска локаторов веб-элементов:

1 Поиск по атрибуту: $('[атрибут="значение"]')
Например: $('[data-testid="my-button"]') // Поиск элемента с атрибутом data-testid и значением "my-button"

2 Поиск по атрибуту, начинающемуся с определенного значения: $('[атрибут^="значение"]')
Например: $('[class^="button-"]') // Поиск элементов, у которых класс начинается с "button-"

3 Поиск по атрибуту, содержащему определенное значение: $('[атрибут*="значение"]')
Например: $('[href*="example.com"]') // Поиск элементов, у которых атрибут href содержит "example.com"

4 Поиск по атрибуту, оканчивающемуся на определенное значение: $('[атрибут$="значение"]')
Например: $('[src$=".jpg"]') // Поиск элементов, у которых атрибут src оканчивается на ".jpg"

5 Поиск по селектору класса: $$('.класс')
Например: $$('.button') // Поиск элементов с классом "button"

6 Поиск по селектору тега внутри определенного элемента: $('элемент тег')

7 Поиск по селектору атрибута, содержащему определенное значение: $('[атрибут~="значение"]')
Например: $('[class~="active"]') // Поиск элементов, у которых атрибут class содержит слово "active"

8 Поиск по селектору атрибута, который начинается с определенного значения и имеет указанное количество символов:
$('[атрибут^="значение"][атрибут$="значение"][атрибут$="количество"]')
Например: $('[class^="btn-"][class$="-large"][class$="-2"]') // Поиск элементов, у которых класс начинается с "btn-", оканчивается на "-large" и имеет длину 2 символа

9 Поиск по селектору атрибута, который не содержит определенное значение: $('[атрибут!="значение"]')
Например: $('[class!="hidden"]') // Поиск элементов, у которых атрибут class не содержит значение "hidden"

10 Поиск по пути (несколько вложенных элементов): $('родитель > потомок')
Например: $('ul > li') // Поиск элементов <li>, которые являются прямыми потомками элемента <ul>

Поиск по псевдоклассу: $(':псевдокласс')
Например:$(':hover') // Поиск элементов, находящихся под курсором мыши

$("[logo-text]") - поиск по тексту
$("#logo") - поиск по ID 
$$('.s__hUp61OcxhZaQr3w4wYv9') - поиск по классу